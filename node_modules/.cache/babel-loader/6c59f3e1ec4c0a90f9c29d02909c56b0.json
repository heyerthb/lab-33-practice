{"ast":null,"code":"var _jsxFileName = \"/Users/matthewheyert/codefellows/401/lab-33-practice/src/components/editor/counter-context.js\";\nimport React from 'react';\nexport const counterContext = React.createContext();\n\nclass CounterContext extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.increment = count => {\n      this.setStatecount + 1;\n    };\n\n    this.decrement = count => {\n      count - 1;\n    };\n\n    this.state = {\n      count: 0,\n      increment: this.increment,\n      decrement: this.decrement\n    };\n  }\n\n  render() {\n    return React.createElement(CounterContext.provider, {\n      value: this.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nexport default CounterContext;","map":{"version":3,"sources":["/Users/matthewheyert/codefellows/401/lab-33-practice/src/components/editor/counter-context.js"],"names":["React","counterContext","createContext","CounterContext","Component","constructor","props","increment","count","setStatecount","decrement","state","render","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,OAAO,MAAMC,cAAc,GAAGD,KAAK,CAACE,aAAN,EAAvB;;AAEP,MAAMC,cAAN,SAA6BH,KAAK,CAACI,SAAnC,CAA4C;AAC1CC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SASlBC,SATkB,GASLC,KAAD,IAAW;AACrB,WAAKC,aAAL,GAAqB,CAArB;AACD,KAXiB;;AAAA,SAalBC,SAbkB,GAaLF,KAAD,IAAW;AACrBA,MAAAA,KAAK,GAAG,CAAR;AACD,KAfiB;;AAEhB,SAAKG,KAAL,GAAa;AACXH,MAAAA,KAAK,EAAE,CADI;AAEXD,MAAAA,SAAS,EAAE,KAAKA,SAFL;AAGXG,MAAAA,SAAS,EAAE,KAAKA;AAHL,KAAb;AAKD;;AAYDE,EAAAA,MAAM,GAAE;AACN,WACE,oBAAC,cAAD,CAAgB,QAAhB;AAAyB,MAAA,KAAK,EAAI,KAAKD,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKL,KAAL,CAAWO,QADd,CADF;AAMD;;AA3ByC;;AA8B5C,eAAeV,cAAf","sourcesContent":["import React from 'react';\n\n\nexport const counterContext = React.createContext();\n\nclass CounterContext extends React.Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      count: 0,\n      increment: this.increment,\n      decrement: this.decrement\n    }\n  }\n\n  increment = (count) => {\n    this.setStatecount + 1\n  }\n\n  decrement = (count) => {\n    count - 1\n  }\n\n\n\n  render(){\n    return (\n      <CounterContext.provider value = {this.state} >\n        {this.props.children}\n      </CounterContext.provider>\n\n    )\n  }\n}\n\nexport default CounterContext;"]},"metadata":{},"sourceType":"module"}